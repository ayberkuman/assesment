import { AnimatePresence, motion } from "framer-motion";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

export default function Home({ students }) {
  const [data, setData] = useState([]);
  const [nameSearch, setNameSearch] = useState("");
  const [tagSearch, setTagSearch] = useState("");
  useEffect(() => {
    students.students.forEach((student) => {
      student.tags = [];
    });
    setData(students.students);
  }, [students.students]);
  const handleSearch = (e) => {
    setNameSearch(e.target.value.toLowerCase());
  };
  const handleTagSearch = (e) => {
    setTagSearch(e.target.value.toLowerCase());
  };
  const filtered = !nameSearch
    ? data
    : data.filter(
        (person) =>
          person.firstName.toLowerCase().includes(nameSearch) ||
          person.lastName.toLowerCase().includes(nameSearch)
      );
  const filteredForTag = !tagSearch
    ? filtered
    : filtered.filter((person) => person.tags.length > 0);

  return (
    <div className={styles.home}>
      <Head>
        <title>Hatch assessment</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.inputHolder}>
          <input
            placeholder="Search by name"
            type="search"
            onChange={(e) => handleSearch(e)}
            className={styles.input}
          ></input>
          <input
            placeholder="Search by tag"
            type="search"
            onChange={(e) => handleTagSearch(e)}
            className={styles.input}
          ></input>
        </div>
        <AnimatePresence>
          {filteredForTag.map((student, i) => (
            <StudentList
              key={i}
              {...student}
              student={student}
              setData={setData}
              data={data}
            />
          ))}
        </AnimatePresence>
      </main>
    </div>
  );
}

export const StudentList = ({
  email,
  company,
  skill,
  grades,
  firstName,
  lastName,
  pic,
  student,
  id,
  data,
  setData,
}) => {
  const [extend, setExtend] = useState(false);
  const [value, setValue] = useState("");
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      saveTag(student, value);
      setValue("");
    }
  };
  const saveTag = (student, value) => {
    student.tags.push(value);

    const indexOfStudent = data.findIndex((s) => s.id === student.id);
    let studentDataWithChanges = [
      ...data.slice(0, indexOfStudent),
      student,
      ...data.slice(indexOfStudent + 1),
    ];
    setData(studentDataWithChanges);
  };
  const handleDelete = (tag, index) => {
    student.tags.splice(index, 1);
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 600 }}
      animate={{
        opacity: 1,
        x: 0,
        y: 0,
        scale: 1,
        height: extend ? "75%" : "45%",
      }}
      exit={{ opacity: 0, y: 600 }}
      transition={{ duration: 0.5 }}
      className={!extend ? styles.container : styles.extendedContainer}
    >
      <div className={styles.imgContainer}>
        <img className={styles.image} alt="profile picture" src={pic} />
      </div>
      <div className={styles.infoWrapper}>
        <div className={styles.name}>
          {firstName.toUpperCase() + " " + lastName.toUpperCase()}
        </div>
        <div>Email: {email}</div>
        <div>Company: {company}</div>
        <div>Skill: {skill}</div>
        <div>
          Average:
          {grades.map((x) => parseInt(x, 10)).reduce((a, b) => a + b, 0) / 8}%
        </div>
        <motion.ul className={styles.list}>
          <AnimatePresence>
            {extend &&
              grades.map((grade, index) => (
                <motion.li
                  initial={{ opacity: 0, x: -300, y: -200, scale: 0.5 }}
                  animate={{ opacity: 1, x: 0, y: 0, scale: 1 }}
                  exit={{ opacity: 0, x: -300, y: -200, scale: 0.5 }}
                  transition={{ duration: 0.5 }}
                  className={styles.listItem}
                  key={index}
                >
                  Test{index + 1}: &nbsp;&nbsp;&nbsp;&nbsp; {grade}%
                </motion.li>
              ))}
          </AnimatePresence>
        </motion.ul>
        <div className={styles.tagsContainer}>
          <AnimatePresence>
            {student.tags.map((tag, i) => (
              <TagsList
                key={i}
                tag={tag}
                handleDelete={handleDelete}
                index={i}
              />
            ))}
          </AnimatePresence>
        </div>
        <motion.div className={styles.inputContainer}>
          <motion.input
            layout="position"
            onBlur={() => setValue("")}
            onChange={(e) => setValue(() => e.target.value)}
            value={value}
            onKeyDown={handleKeyDown}
            className={styles.input}
            placeholder="Add a tag"
            type="search"
          />
        </motion.div>
      </div>
      <div className={styles.expandButton}>
        <motion.button
          animate={extend ? { rotate: 180 } : { rotate: 90 }}
          onClick={() => setExtend((cur) => !cur)}
          className={extend ? styles.extendedButton : styles.button}
        ></motion.button>
      </div>
    </motion.div>
  );
};

export const TagsList = ({ tag, handleDelete, index }) => {
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      transition={{ duration: 0.5 }}
      onClick={() => handleDelete(tag, index)}
      className={styles.tags}
    >
      {tag}
    </motion.div>
  );
};

export async function getStaticProps() {
  const res = await fetch("https://api.hatchways.io/assessment/students");
  const students = await res.json();
  return {
    props: {
      students,
    },
  };
}
